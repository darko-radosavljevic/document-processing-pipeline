version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: document_processing_db
    environment:
      POSTGRES_DB: document_processing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: document_processing_rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: document_processing_app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: document_processing
      RABBITMQ_URL: amqp://admin:admin@rabbitmq:5672
      RABBITMQ_QUEUE: document_queue
      UPLOAD_DESTINATION: ./uploads
      MAX_FILE_SIZE: 10485760
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:
  uploads_data: 